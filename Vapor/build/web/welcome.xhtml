<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
  <h:head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Vapor - Welcome</title>
    <meta name="description" content="SVG Drawing Animation" />

    <style type="text/css">

      /* Base style */
      html {
        font-size: 24px;
      }
      body {
        font-family: "Microsoft Ya Hei";
        margin: 0 0 40px;
        color: #666666;
        /*background-color: #091e0a;*/
        background-color: #000;
        word-break: break-word;
      }
      ul {
        display: none;
      }
      a, a:visited, a:hover, a:link {
        color: inherit;
        outline: 0;
      }
      small {
        font-weight: 100;
      }
      p {
        font-size: 1rem;
        line-height: 1.4rem;
      }
      button, .button {
        margin: 0; padding: 3px 6px;
        border-radius: 6px;
        border: 1px solid currentColor;
        color: inherit;
        background-color: rgba(0,0,0,0);
        font-size: 0.6rem;
        font-weight: 300;
        text-decoration: none;
        cursor: pointer;
        outline: 0;
      }
      button.active, .button.active {
        background-color: currentColor;
      }
      button.active span, .button.active span {
        color: #FFFFFF;
      }
      i {
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: 4px;
      }
      svg * {
        fill: none;
        stroke: currentColor;
      }

      /* Common components */
      .bloc {
        color: #f9f9f9;
        padding: 1px 0 30px;
        clear: both;
      }
      .content {
        margin: auto;
        max-width: 960px;
        padding: 0 20px;
      }
      .col3 {
        width: 33.33%;
        float: left;
        text-align: center;
        border-bottom-color: currentColor;
        border-bottom-style: solid;
      }
      .col-container {
        padding: 0 12px;
      }
      .col3 p {
        font-size: 0.75rem;
        line-height: 1.05rem;
      }

      /* Text */
      .bigger {
        font-size: 1rem;
        font-weight: 100;
        line-height: 1.4rem;
      }
      .center {
        text-align: center;
      }
      .clearer {
        clear: both;
      }
      .striked {
        text-decoration: line-through;
      }
      .italic {
        font-style: italic;
      }

      /* Blocs */
      .bloc-head     { color: rgb(3, 209, 1); padding: 30px; }
      .bloc-demo     { color: rgb(3, 209, 1); }
      .bloc-timing   { color: #F7A800; }
      .bloc-scenario { color: #4fe084; }
      .bloc-doc      { color: #69B0CA; }

      .enter {
        font-family: "Harigino";
        font-size: 20px;
        color: rgb(3, 209, 1);
        float: right;
        padding-right: 150px;
      }


    </style>
  </h:head>
  <h:body>
    <!-- Head: HI THERE -->
    <div class="bloc bloc-head">
      <svg width="960" height="600" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
           viewBox="-100 0 400 800" eannable-background="new 0 0 1000 2000" id="hi-there" onclick="hi.reset().play();">

        <path
          d="m 264.09961,280.77175 -77.25586,141.85547 -42.71484,-141.85547 20.39062,0 28.125,94.57032 49.74609,-94.57032 21.70899,0 z"
          style="font-size:180px"
          id="path3353" />
        <path
          d="m 278.9458,396.09158 -10.55664,20.3833 -13.98193,0 47.9541,-92.87598 29.9292,92.87598 -13.42041,0 -6.28907,-20.3833 -33.63525,0 z m 5.55908,-11.11817 24.48242,0 -9.32128,-30.82763 -15.16114,30.82763 z"
          style="font-size:115px"
          id="path3355" />
        <path
          d="m 353.2915,329.77566 17.57569,0 q 11.45508,0 17.46338,3.81836 4.9414,3.08838 7.74902,8.70361 2.80762,5.78369 2.80762,12.18506 0,9.32129 -5.22217,16.39649 -7.74902,10.50048 -24.42627,10.50048 l -9.48975,0 -4.32373,35.09522 -12.85888,0 10.72509,-86.69922 z m 11.34278,11.96045 -3.48145,28.24463 8.3667,0 q 7.91748,0 12.12891,-4.04297 4.26758,-4.09912 4.26758,-11.79199 0,-12.40967 -15.83497,-12.40967 l -5.44677,0 z"
          style="font-size:115px"
          id="path3357" />
        <path
          d="m 498.1084,371.4407 q 0,14.82422 -7.86133,26.89697 -6.23291,9.48975 -16.28418,14.65576 -10.05127,5.16602 -22.23633,5.16602 -19.48486,0 -31.78222,-12.40967 -12.29737,-12.46582 -12.29737,-32.23144 0,-19.70948 13.02735,-32.56836 13.08349,-12.91504 33.01757,-12.91504 19.93409,0 32.1753,11.96045 12.24121,11.90429 12.24121,31.44531 z m -12.91504,-0.11231 q 0,-14.20654 -8.42285,-22.7417 -8.42285,-8.479 -22.6294,-8.479 -14.26269,0 -23.97705,9.5459 -9.60205,9.5459 -9.60205,23.86475 0,14.15039 8.92822,23.41552 8.92823,9.20899 22.57325,9.20899 14.20654,0 23.64013,-9.93897 9.48975,-9.82666 9.48975,-24.87549 z"
          style="font-size:115px"
          id="path3359" />
        <path
          d="m 543.03027,379.9197 21.78711,36.55518 -13.58886,0 -20.55176,-35.65674 -4.66065,0 -4.37988,35.65674 -12.85889,0 10.66895,-86.69922 17.01416,0 q 8.31055,0 13.1958,1.51611 4.8291,1.40381 8.42285,5.16602 6.79444,6.96289 6.79444,17.96875 0,20.15869 -21.84327,25.49316 z m -12.24121,-38.18359 -3.36914,27.85156 5.896,0 q 6.51367,0 9.71435,-1.23535 3.4253,-1.23535 5.72754,-4.21143 3.14453,-4.15527 3.14453,-9.7705 0,-6.56983 -3.81836,-9.60205 -3.7622,-3.03223 -11.90429,-3.03223 l -5.39063,0 z"
          style="font-size:115px"
          id="path3361" />

      </svg>
    </div>
    <!-- Le scripts -->
    <script src="assets/js/vivus.js"></script>
    <script>
             function easeOutBounce(x) {
               var base = -Math.cos(x * (0.5 * Math.PI)) + 1;
               var rate = Math.pow(base, 1.5);
               var rateR = Math.pow(1 - x, 2);
               var progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI))) + 1;
               return (1 - rateR) + (progress * rateR);
             }

             var timing,
                     timingProps = {
                       type: 'delayed',
                       duration: 150,
                       start: 'autostart',
                       pathTimingFunction: Vivus.LINEAR,
                       animTimingFunction: Vivus.LINEAR
                     };

             function timingTest(buttonEl, property, type) {
               var activeSibling = buttonEl.parentNode.querySelector('button.active');
               activeSibling.classList.remove('active');
               buttonEl.classList.add('active');

               timingProps.type = (property === 'type') ? type : timingProps.type;
               timingProps.pathTimingFunction = (property === 'path') ? Vivus[type] : timingProps.pathTimingFunction;
               timingProps.animTimingFunction = (property === 'anim') ? Vivus[type] : timingProps.animTimingFunction;


               timing = new Vivus('timing-example', timingProps);
             }

             var hi = new Vivus('hi-there', {type: 'async', duration: 200, start: 'autostart', dashGap: 200, forceRender: false},
             function () {
               if (window.console) {
                 console.log('Animation finished. [log triggered from callback]');
               }
             }),
                     obt1 = new Vivus('obturateur1', {type: 'delayed', duration: 150}),
                     obt2 = new Vivus('obturateur2', {type: 'async', duration: 150}),
                     obt3 = new Vivus('obturateur3', {type: 'oneByOne', duration: 150}),
                     pola = new Vivus('polaroid', {type: 'scenario-sync', duration: 20, forceRender: false});
    </script>
    <div class="enter">
      <h:link outcome="index">进入</h:link>
    </div>
  </h:body>
</html>

